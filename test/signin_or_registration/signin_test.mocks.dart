// Mocks generated by Mockito 5.2.0 from annotations
// in shipanther/test/signin_or_registration/signin_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:shipanther/data/auth/auth_repository.dart' as _i3;
import 'package:trober_sdk/trober_sdk.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

class _FakeApiWithUserId_1 extends _i1.Fake implements _i3.ApiWithUserId {}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.User> signIn(String? username, String? password) =>
      (super.noSuchMethod(Invocation.method(#signIn, [username, password]),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<_i2.User> registerUser(
          String? name, String? username, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#registerUser, [name, username, password]),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<_i2.User> loggedInUser() =>
      (super.noSuchMethod(Invocation.method(#loggedInUser, []),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<_i2.User> logIn() => (super.noSuchMethod(
          Invocation.method(#logIn, []),
          returnValue: Future<_i2.User>.value(_FakeUser_0()))
      as _i4.Future<_i2.User>);
  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.User> verifyEmail() =>
      (super.noSuchMethod(Invocation.method(#verifyEmail, []),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<void> forgotPassword(String? email) =>
      (super.noSuchMethod(Invocation.method(#forgotPassword, [email]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i3.ApiWithUserId> apiClient() => (super.noSuchMethod(
          Invocation.method(#apiClient, []),
          returnValue: Future<_i3.ApiWithUserId>.value(_FakeApiWithUserId_1()))
      as _i4.Future<_i3.ApiWithUserId>);
  @override
  _i4.Future<String> sendEmailForVerification() =>
      (super.noSuchMethod(Invocation.method(#sendEmailForVerification, []),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
}
